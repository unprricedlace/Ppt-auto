/* Style for the sidebar */
.sidebar .stSelectbox {
    background-color: #f5f7fa;
    border-radius: 8px;
    padding: 12px;
    font-size: 16px;
    color: #333;
    border: 1px solid #e0e0e0;
    margin-bottom: 15px;
}

/* Style for the buttons with improved shades of red */
.stButton > button {
    background-color: #e57373; /* Light red */
    color: white;
    border: none;
    border-radius: 8px;
    padding: 12px 20px;
    font-size: 16px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.stButton > button:hover {
    background-color: #ef5350; /* Medium red */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
    transform: translateY(-2px);
}

.stButton > button:active {
    background-color: #d32f2f; /* Darker red */
    transform: translateY(0);
}

/* Style for the data preview section */
.data-preview {
    background-color: #ffffff;
    border: 1px solid #eceff1;
    border-radius: 8px;
    padding: 15px;
    margin-top: 15px;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
}

/* Style for tables and dataframes */
.stDataFrame {
    border: 1px solid #eceff1;
    border-radius: 8px;
    overflow: hidden;
    margin: 10px 0;
}

.stDataFrame [data-testid="stVerticalBlock"] div:nth-child(1) {
    background-color: #f5f7fa !important;
    font-weight: 600;
}

/* Data result container */
.data-result-container {
    background-color: #ffffff;
    border: 1px solid #eceff1;
    border-radius: 8px;
    padding: 15px;
    margin: 10px 0;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
    max-height: 400px;
    overflow-y: auto;
}

/* Style for the expander to make it wider and cleaner */
.stExpander {
    width: 100%;
    border-radius: 8px;
    border: 1px solid #eceff1;
    margin-bottom: 15px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

.stExpander > div {
    padding: 15px;
}

/* Style for the chat messages */
.chat-message {
    background-color: #f9f9f9;
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 15px;
    font-size: 14px;
    color: #333;
    border-left: 4px solid #e57373;
}

/* Style for code blocks in chat */
pre {
    background-color: #282c34;
    color: #abb2bf;
    border-radius: 6px;
    padding: 12px;
    font-family: 'Courier New', monospace;
    overflow-x: auto;
}

/* Style for the chat input area */
.stChatInput {
    border-radius: 20px;
    border: 1px solid #e0e0e0;
    padding: 10px 15px;
}

.stChatInput:focus {
    border: 1px solid #e57373;
    box-shadow: 0 0 0 2px rgba(229, 115, 115, 0.2);
}

/* Style for message containers */
.stChatMessage {
    background-color: #f8f9fa;
    border-radius: 8px;
    padding: 12px;
    margin-bottom: 10px;
    border-left: 4px solid transparent;
}

.stChatMessage.user {
    border-left-color: #2196f3;
    background-color: #e3f2fd;
}

.stChatMessage.assistant {
    border-left-color: #e57373;
    background-color: #f5f5f5;
}

/* Style for spinners and progress bars */
.stSpinner > div {
    border-top-color: #e57373 !important;
}

.stProgress > div > div {
    background-color: #e57373 !important;
}

/* Style for alerts and notifications */
.stAlert {
    border-radius: 8px;
    border: none;
    padding: 15px;
}

/* Style for info alerts */
.stInfo {
    background-color: #e3f2fd;
    color: #0d47a1;
}

/* Style for error alerts */
.stError {
    background-color: #ffebee;
    color: #c62828;
}

/* Style for success alerts */
.stSuccess {
    background-color: #e8f5e9;
    color: #2e7d32;
}

/* Style for warning alerts */
.stWarning {
    background-color: #fff8e1;
    color: #ef6c00;
}

/* Style for charts */
.js-plotly-plot {
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
    margin: 15px 0;
}

/* Style for dividers */
hr {
    border: none;
    height: 1px;
    background-color: #eceff1;
    margin: 20px 0;
}

/* Media queries for responsiveness */
@media (max-width: 768px) {
    .stButton > button {
        padding: 10px 15px;
        font-size: 14px;
    }
}


import sqlite3
import re

def quote_for_sqlite(query_with_placeholders, *values):
    conn = sqlite3.connect(":memory:")
    cursor = conn.cursor()
    
    # Helper function to quote identifiers
    def quote_identifier(identifier):
        # Check if already quoted
        if identifier.startswith('"') and identifier.endswith('"'):
            return identifier  # Already quoted
        return f'"{identifier}"'
    
    # Your column/table names - in a real implementation, you would
    # either extract these from your schema or parse the SQL
    identifiers = ["column1", "column2", "table_name"]
    
    # Use regex to find and replace identifiers while preserving quotes
    processed_query = query_with_placeholders
    
    for identifier in identifiers:
        # Pattern to match the identifier when it's not already quoted
        # This looks for the identifier with word boundaries that isn't already
        # enclosed in double quotes
        pattern = r'(?<!")(\b' + re.escape(identifier) + r'\b)(?!")'
        processed_query = re.sub(pattern, quote_identifier(identifier), processed_query)
    
    return processed_query

# Example
original = "SELECT column1, column2, \"already_quoted\" FROM table_name WHERE column1 = ?"
processed = quote_for_sqlite(original)
print(processed)
# Result: SELECT "column1", "column2", "already_quoted" FROM "table_name" WHERE "column1" = ?
